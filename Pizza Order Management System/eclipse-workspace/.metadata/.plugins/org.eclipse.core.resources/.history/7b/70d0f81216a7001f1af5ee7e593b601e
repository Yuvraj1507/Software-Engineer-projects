
package main;

import models.User;
import models.Pizza;
import models.Order;
import services.UserService;
import services.OrderService;
import services.pizzaservice;

import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        UserService userService = new UserService();
        OrderService orderService = new OrderService();
        pizzaservice pizzaService = new pizzaservice(); // Service to handle pizzas
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Welcome to the Pizza Order Management System");
        
        // Login or Register
        User user = null;
        while (user == null) {
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            
            if (choice == 1) {
                System.out.print("Enter username: ");
                String username = scanner.nextLine();
                System.out.print("Enter password: ");
                String password = scanner.nextLine();
                
                user = userService.registerUser(username, password);
                if (user != null) {
                    System.out.println("Registration successful! Welcome, " + username + "!");
                } else {
                    System.out.println("Registration failed. Try again.");
                }
            } else if (choice == 2) {
                System.out.print("Enter username: ");
                String username = scanner.nextLine();
                System.out.print("Enter password: ");
                String password = scanner.nextLine();
                
                user = userService.loginUser(username, password);
                if (user != null) {
                    System.out.println("Login successful! Welcome, " + username + "!");
                } else {
                    System.out.println("Invalid credentials. Try again.");
                }
            } else {
                System.out.println("Invalid option. Please choose 1 or 2.");
            }
        }
        
        // Once logged in, show the main menu
        while (true) {
            System.out.println("\nMain Menu:");
            System.out.println("1. View Pizza Menu");
            System.out.println("2. Place an Order");
            System.out.println("3. View Your Orders");
            System.out.println("4. Logout");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            
            if (option == 1) {
                // Show the pizza menu
                List<Pizza> pizzas = pizzaService.getAllPizzas();
                System.out.println("Pizza Menu:");
                for (Pizza pizza : pizzas) {
                    System.out.println(pizza.getPizzaId() + ". " + pizza.getName() + " - $" + pizza.getPrice());
                }
            } else if (option == 2) {
                // Place an order
                System.out.print("Enter pizza ID to order: ");
                int pizzaId = scanner.nextInt();
                scanner.nextLine(); // Consume newline
                Pizza selectedPizza = pizzaService.getPizzaById(pizzaId);
                
                if (selectedPizza != null) {
                    System.out.print("Enter quantity: ");
                    int quantity = scanner.nextInt();
                    scanner.nextLine(); // Consume newline
                    
                    double totalPrice = selectedPizza.getPrice() * quantity;
                    Order order = new Order(0, user.getUserId(), selectedPizza, quantity);
                    order.setTotalPrice(totalPrice);
                    
                    boolean isOrderPlaced = orderService.addOrder(order);
                    if (isOrderPlaced) {
                        System.out.println("Order placed successfully! Total price: $" + totalPrice);
                    } else {
                        System.out.println("Failed to place order. Try again.");
                    }
                } else {
                    System.out.println("Invalid pizza ID. Try again.");
                }
            } else if (option == 3) {
                // View orders for the logged-in user
                List<Order> orders = orderService.getOrdersByUserId(user.getUserId());
                if (orders.isEmpty()) {
                    System.out.println("You have no orders yet.");
                } else {
                    System.out.println("Your Orders:");
                    for (Order order : orders) {
                        System.out.println(order);
                    }
                }
            } else if (option == 4) {
                // Logout
                System.out.println("Logging out...");
                break;
            } else {
                System.out.println("Invalid option. Please try again.");
            }
        }
        
        scanner.close();
    }
}
